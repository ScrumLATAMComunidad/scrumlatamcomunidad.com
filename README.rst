SCRUM LATAM Comunidad Website
=============================

The `Scrum Latam Comunidad <https://www.scrumlatamcomunidad.com/>`_ Website repository.

|Built with Cookiecutter Plone Starter| |Black code style| |Backend Tests| |Frontend Tests|

A new SCRUM LATAM Comunidad Website using Plone 6 and Volto
technologies.


Quick start
-----------

Development Setup
~~~~~~~~~~~~~~~~~

-  Python 3.9, 3.10, 3.11
-  Node 16
-  yarn
-  Docker


Install
~~~~~~~

Install the requirements dependencies, executing the following command:

.. code:: shell

   sudo apt install build-essential python3-dev python3-venv git tree curl


Download and install `Node Version Manager - NVM <https://github.com/nvm-sh/nvm/blob/master/README.md>`_,
executing the following command:

.. code:: shell

   curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash


Setting the ``nvm`` script into console environments to use it, executing the following command:

.. code:: shell

   export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")" \
      [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"


To reflect the ``nvm`` script changes in the terminal environments to use it, executing the following command:

.. code:: shell

   source ~/.bashrc && exit

Launch the terminal again and continues with execute the next commands.

Install `Node 16 Version <https://nodejs.org/en/blog/release/v16.16.0>`_:


Download and install Node 16 Version, executing the following command:

.. code:: shell

   nvm install 16

Enable the Node 16 Version to use it, executing the following command:

.. code:: shell

   nvm use 16


Install `yarn <https://yarnpkg.com/>`_ tool, executing the following command:

.. code:: shell

   npm install --global yarn


Clone and install the git repository, executing the following command:

.. code:: shell

   git clone git@github.com:ScrumLATAMComunidad/slc-sitioweb.git slc-sitioweb && cd $_


Install the dev stack, executing the following command:

.. code:: shell

   make install


Start
~~~~~

Open two consoles to run each of the following commands in each of them:

Start the Backend (http://localhost:8080/)

.. code:: shell

   make start-backend

Start the Frontend (http://localhost:3000/)

.. code:: shell

   make start-frontend


Help
~~~~

For more details information about tasks available for command ``make``,
executing the following command:

.. code:: shell

   make help


Structure
---------

This monorepo is composed by two distinct codebases: api and frontend.

-  **backend**: API (Backend) Plone installation using ``pip`` (not
   *buildout*). Includes a policy package named ``slc_sitioweb``. More
   details information at `backend/src/slc_sitioweb/README.md <backend/src/slc_sitioweb/README.md>`_ file.

-  **devops**: Devops Deployments scripts por this monorepo. More details
   information at `devops/README.md <devops/README.md>`_ file.

-  **frontend**: React (Volto) package named frontend. More details
   information at `frontend/README.md <frontend/README.md>`_ file.


Reasoning
~~~~~~~~~

-  Repo contains all codebase needed to run the site (excluding existing
   addons for Plone and React).

-  Github Workflows are triggered based on changes on each codebase (see
   ``.github/workflows``)

-  Easier to create Docker images for each codebase

-  Showcase Plone installation/setup without buildout


Linters and Formatting
----------------------

There are some hooks to run lint checks on the code. If you want to
automatically format them, you can run

``make format``

in the root folder or specifically in each backend or frontend folders.

Linters commands are available in each backend and frontend folder.


Acceptance tests
----------------

There are ``Makefile`` commands in place:

``build-test-acceptance-server``: Build Acceptance Backend Server Docker
image that itâ€™s being used afterwards. Must be run before running the
tests, if the backend code has changed.

``start-test-acceptance-server``: Start server fixture in docker
(previous build required)

``start-test-acceptance-frontend``: Start the Core Acceptance Frontend
Fixture in dev mode

``test-acceptance``: Start Core Cypress Acceptance Tests in dev mode


Credits
-------

**This was generated by** `cookiecutter-plone-starter <https://github.com/collective/cookiecutter-plone-starter>`_ **on 2023-05-11 04:07:02**

.. |Built with Cookiecutter Plone Starter| image:: https://img.shields.io/badge/built%20with-Cookiecutter%20Plone%20Starter-0083be.svg?logo=cookiecutter
   :target: https://github.com/collective/cookiecutter-plone-starter/
.. |Black code style| image:: https://img.shields.io/badge/code%20style-black-000000.svg
   :target: https://github.com/ambv/black
.. |Backend Tests| image:: https://github.com/ScrumLATAMComunidad/slc-sitioweb/actions/workflows/backend.yml/badge.svg
   :target: https://github.com/ScrumLATAMComunidad/slc-sitioweb/actions/workflows/backend.yml
.. |Frontend Tests| image:: https://github.com/ScrumLATAMComunidad/slc-sitioweb/actions/workflows/frontend.yml/badge.svg
   :target: https://github.com/ScrumLATAMComunidad/slc-sitioweb/actions/workflows/frontend.yml
